# Name of the GitHub Action workflow
name: Deploy to IONOS

# Trigger the workflow on push events to the main branch
on:
    push:
      branches:
        - main

    workflow_dispatch:  # The 'workflow_dispatch' event allows you to manually trigger the workflow from the GitHub Actions tab without needing of push or pull request.

# Define the jobs to be run in the workflow
jobs:
  deploy:
    # Specify the runner environment
    runs-on: ubuntu-latest

    # Define the steps to be executed in the job
    steps:
        # Step to checkout the repository
        - name: Checkout repository
          uses: actions/checkout@v3

        # Step to build and push Docker image
        - name: Build & push Docker image # This step builds and pushes the Docker image
          uses: mr-smithers-excellent/docker-build-push@v6
          with:
            image: asad/ci-cd-actions # The name of the Docker image
            tags: ${{ github.sha }}, latest # Tags for the Docker image
            registry: ivicosregistry.cr.de-fra.ionos.com # The Docker registry to push the image to
            dockerfile: Dockerfile # The Dockerfile to use for building the image
            username: ${{ secrets.IONOS_TOKEN_NAME }} # IONOS token name from secrets
            password: ${{ secrets.IONOS_TOKEN_PASSWORD }} # IONOS token password from secrets

        - name: Replace docker-image name in web-app.yaml
            # Use the 'sed' command to find and replace the Docker image name in the web-app.yaml file
            # 'sed -i' is used to edit the file in place
            # 's|image: docker-image|image: ivicosregistry.cr.de-fra.ionos.com/asad199/ci-cd-actions:${{ github.sha }}|g' is the substitution pattern
            # It replaces 'image: docker-image' with 'image: asad199/ci-cd-actions:${{ github.sha }}' globally in the file
          run: |
            sed -i 's|image: docker-image|image: asad/ci-cd-actions:${{ github.sha }}|g' web-app.yaml

        - name: Configure kubectl to use IONOS Kubeconfig
          run: |
              mkdir -p $HOME/.kube
              echo "${{ secrets.KUBE_CONFIG_IONOS }}" | base64 --decode > $HOME/.kube/temp-config.yaml
              cat $HOME/.kube/temp-config.yaml
          env:
              KUBECONFIG: $HOME/.kube/temp-config.yaml

        - name: Verify kubectl configuration
          run: |
              KUBECONFIG=$HOME/.kube/temp-config.yaml kubectl config view
              KUBECONFIG=$HOME/.kube/temp-config.yaml kubectl config get-contexts
              KUBECONFIG=$HOME/.kube/temp-config.yaml kubectl config current-context
              if ! KUBECONFIG=$HOME/.kube/temp-config.yaml kubectl config view | grep -q "ivicosregistry.cr.de-fra.ionos.com"; then
                  echo "Error: kubectl configuration does not match IONOS configuration"
                exit 1
              fi

        - name: Check if Kubernetes secret exists
          id: check-secret
          run: |
            if KUBECONFIG=$HOME/.kube/temp-config.yaml kubectl get secret ionossecretasad; then
              echo "exists=true" >> $GITHUB_ENV
            else
              echo "exists=false" >> $GITHUB_ENV
            fi

        - name: Create Kubernetes secret for Docker registry if it does not exist
          if: env.exists == 'false'
          env:
            IONOS_TOKEN_NAME: ${{ secrets.IONOS_TOKEN_NAME }}
            IONOS_TOKEN_PASSWORD: ${{ secrets.IONOS_TOKEN_PASSWORD }}
            IONOS_EMAIL: ${{ secrets.IONOS_EMAIL }}
          run: |
            KUBECONFIG=$HOME/.kube/temp-config.yaml kubectl create secret docker-registry ionossecretasad \
              --docker-server=ivicosregistry.cr.de-fra.ionos.com \
              --docker-username=$IONOS_TOKEN_NAME \
              --docker-password=$IONOS_TOKEN_PASSWORD \
              --docker-email=$IONOS_EMAIL

        # Step to create deployment to IONOS Kubernetes
        - name: Apply Kubernetes manifests
          run: |
            KUBECONFIG=$HOME/.kube/temp-config.yaml kubectl apply -f web-app.yaml
